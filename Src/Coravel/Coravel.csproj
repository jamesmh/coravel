<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <PackageId>Coravel</PackageId>
    <Version>1.5.5</Version>
    <Authors>James Hickey</Authors>
    <Company>-</Company>
    <Title>Coravel</Title>
    <Description>.Net Core meets Laravel: Scheduling, Queuing, etc.</Description>
    <PackageProjectUrl>https://github.com/jamesmh/coravel</PackageProjectUrl>
    <RepositoryUrl>https://github.com/jamesmh/coravel</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>netcore;scheduling;coravel;queuing;scheduler;tasks;jobs</PackageTags>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.App" Version="2.1.0"/>
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="2.1.0"/>
    <PackageReference Include="Microsoft.Extensions.FileProviders.Physical" Version="2.1.0"/>
    <PackageReference Include="Microsoft.Extensions.PlatformAbstractions" Version="1.1.0"/>
    <PackageReference Include="MailKit" Version="2.0.5"/>
  </ItemGroup>
  <ItemGroup>
  <!-- This will not be included when packaged as nuget. That's why Coravel.Razor
      is also a nuget package - so the consuming client can use both projects.
      The cli will include both by running "coravel install" -->
    <ProjectReference Include="..\Coravel.Razor\Coravel.Razor.csproj"/>
  </ItemGroup>
</Project>